---
layout: post
comments: True
title: VLCTesting Valencia 2016
tags: talks 
eye_catch: ""
---

Parece mentira que haya pasado un año...

![](http://emerrefe.github.io/qa-blog/images/vlctesting2016.png)

La verdad este VLCTesting me ha parecido muy bueno. Es la segunda vez que asisto y quién me iba a decir a mi que 
este año estaría viviendo en Valencia :)

Como la otra vez, quiero recoger un resumen de las ponencias y los seminarios por si esta información os parece interesante.

# En relación a las ponencias:

## Software testing… ¡Hay que echarle valor!
por **Maximiliano Mannise**

Siempre abre camino con tono divertido y esta vez con las distintas acepciones para la palabra valor en testing:
Valor como valentía y coraje para poder llevar un proyecto adelante.
Valor como satisfacer una necesidad del usuario.
Valor que las personas aportan en todo el proceso, nuestras skills, no sólo por los testers sino por todos y el trabajo en equipo.
Además nos comentó que aunque sabemos que nuestra misión principal es encontrar esos bugs, eso no es entregar valor, 
debemos aportar mucho más, dar más información para así poder defender la calidad del producto.
Igualmente debemos dar visibilidad al tiempo que se debe dedicar al testing en los proyectos.

Esta ponencia me hizo recordar [este vídeo](https://www.youtube.com/watch?v=8TX6rzz60xQ) de James Bach sobre la aplicación del pensamiento crítico.

También hizo hincapié en el análisis de la causa raíz y los 5 porqués que facilita averiguar la causa de un determinado problema.
Si no la conocéis podéis echar un ojo a [este post](http://www.pdcahome.com/7642/analisis-de-causa-raiz-metodologia-para-investigar-y-resolver-incidencias).
(aunque no debemos olvidar que esto nos puede llevar equivocadamente a encontrar una única causa y normalmente la realidad incluye más
variables a la ecuación y por tanto más causas).

## Devops Mythbusters
por **Salvador Folgado y Jordi Borja**

Comentaron los mitos que han detectado a la hora de implantar la figura del DevOps en las empresas.
Anteriormente al ciclo de conferencias nos enviaron un correo con una encuesta sobre esto y aquí los han expuesto y comentado.

En resumen es recordar que quienes trabajan en operaciones lo hace para dar información y 
preparar la infraestructura según la demanda y dar valor al negocio.


## ¿Cómo hemos potenciado nuestro desarrollo ágil con testing BDD?
por **Jorge López Mateo**

Ya que el cerebro humano no entiende las abstracciones de primera mano, cuantos más ejemplos tenemos de algo,
mejor entendemos los conceptos. Por ello en BDD se hace un boceto de las pruebas en lenguaje natural 
(precondiciones, evento y postcondiciones), se escriben ejemplos y después se hacen ejecutables.

Es muy buena excusa para juntar al analista, el tester y el desarrollador para crear esos ejemplos concretos 
que sirven de referencia para los planes de pruebas y para aportar el valor que el usuario final demanda.

Contaron que en su empres han mejorado con BDD la mantenibilidad de los tests unitarios. Con ello se han dado cuenta 
de que se suavizan las fases por las que pasa el producto y se fomenta el mundo agile.

Además nombró frameworks como [cucumber](https://cucumber.io) que ayudan a facilitar esta implantación de BDD.

# En relación a los seminarios:


